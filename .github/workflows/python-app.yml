name: Python Application CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: data_stories_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Set up test database
      run: |
        mysql -h127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS data_stories_test;"
        mysql -h127.0.0.1 -uroot -proot data_stories_test -e "
          CREATE TABLE IF NOT EXISTS japan_naval_sinkings (
            sunk_id INT AUTO_INCREMENT PRIMARY KEY,
            sunk_month_year DATE,
            sunk_date DATE,
            sunk_type_vessel TEXT,
            sunk_standard_tonnage TEXT
          );
          
          INSERT INTO japan_naval_sinkings (sunk_month_year, sunk_date, sunk_type_vessel, sunk_standard_tonnage)
          VALUES 
            ('1941-12-01', '1941-12-07', 'Battleship', '35000'),
            ('1941-12-01', '1941-12-07', 'Destroyer', '1800'),
            ('1941-12-01', '1941-12-10', 'Cruiser', '9000'),
            ('1942-01-01', '1942-01-15', 'Destroyer', '1500'),
            ('1942-02-01', '1942-02-15', 'Cruiser', '5000'),
            ('1942-03-01', '1942-03-15', 'Battleship', '20000');"
        
    - name: Run tests with pytest
      env:
        DB_HOST: 127.0.0.1
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: data_stories_test
        DB_PORT: 3306
      run: |
        pytest --cov=src/ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
